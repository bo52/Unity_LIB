//empty
//empty
//собрать куб из восьми вершин по 256 видам (без границ)
using UnityEngine;
namespace LIB.st2305202041
{
    /// <summary>
    /// собрать куб из восьми вершин по 256 видам (без границ)
    /// </summary>
    static public class Class
    {
        static public string INFO = "INFO";
        /// <summary>
        ///собрать куб в списки vs,ns,uvs
        /// </summary>
        static public void fun230520204100_СобратьБлок(this cs2305141202.IClass Редактор)
        {
            if (Редактор.ТекущийБлок.Код == 0) return;
            //треугольники
            foreach (var ИндексУникальногоТреугольника in st2305141315.Class.field230514131500_БлокИзТреугольников[Редактор.ТекущийБлок.Код])
            {
                //треугольник
                for (byte i = 0; i < 3; i++)
                {
                    Редактор.ДобавитьВершинуДляБлока(st2305141159.Class.fun230514115903_ТочкаУникальногоТреугольника(ИндексУникальногоТреугольника, i));
                }
            }
        }
        /// <summary>
        /// добавить вершину cube256 в блок по координате
        /// </summary>
        /// <param name="Редактор"></param>
        /// <param name="КодВершиныБлока"></param>
        /// <param name="КоординатаВершиныБлока"></param>
        static public void fun230520204101_СобратьБлокПоТекущему(this cs2305141202.IClass Редактор, cs2306262134.Class b)
        {
            Редактор.ТекущийБлок = b;
            fun230520204100_СобратьБлок(Редактор);
        }
        ///exit
    }
}
